#!/usr/bin/env node
import { writeFile, rm } from "node:fs/promises";
import { existsSync, readdirSync } from "node:fs";
import { join, relative, normalize, basename } from "node:path";
import { exit } from "node:process";
import { copy } from "fs-extra";
import { build, analyzeMetafile } from "esbuild";
import {
    __dirname,
    __public,
    commonEsBuildConfig,
    log,
    prepareHtml,
} from "./common.mjs";

if (existsSync(join(__dirname, "dist"))) {
    log(":file_folder: Build directory already exists, cleaning up...");
    await rm(join(__dirname, "dist"), { recursive: true, force: true });
}

const startTime = Date.now();
log(":rocket: Starting build");

const buildResult = await build({
    ...commonEsBuildConfig,
    outdir: join(__dirname, "dist/"),
    entryNames: "[name]-[hash]",
});
log(":white_check_mark: Done build");
log(`:clock1: Build time: ${Date.now() - startTime} ms`);

log(":chart_with_upwards_trend: Done build, writing build meta info");
await writeFile(
    join(__dirname, "build-meta.json"),
    JSON.stringify(buildResult.metafile)
);

const info = await analyzeMetafile(buildResult.metafile);
await writeFile(join(__dirname, "build-info.txt"), info);
log(":white_check_mark: Done writing build meta info");

log(":chart_with_upwards_trend: Setting up index.html file");
const buildPrefix = relative(
    normalize(join(__dirname, "../")),
    normalize(join(__dirname, "dist"))
);
const generatedFiles = Object.keys(buildResult.metafile.outputs).map((f) =>
    f.replace(buildPrefix, "")
);
await writeFile(
    join(__dirname, "dist/index.html"),
    await prepareHtml(generatedFiles)
);
log(":white_check_mark: Done setting up index.html file");

log(":chart_with_upwards_trend: Copying files from public/ folder");
for (const file of readdirSync(__public)) {
    if (file === "index.html") {
        // index.html is generated by script
        continue;
    }

    await copy(
        join(__public, file),
        join(__dirname, "dist", basename(file))
    );
}
log(":white_check_mark: Done copying files");

exit(0);
